David S. Vieyra | A01656030
Daniel Rodr√≠guez | A01656030

BNF:
<programa> ::= <modulo>
<modulo> ::= "defmodule" <identificador> "do" { <funcion> } "end"
<funcion> ::= "def" <identificador> "(" { <identificador> } ")" "do" <cuerpo_funcion> "end"
<cuerpo_funcion> ::= <expresion> | <condicional>
<expresion> ::= <identificador> | <numero> | <cadena> | <booleano> | <expresion> <operador> <expresion>
<condicional> ::= "if" <expresion> "do" <cuerpo_funcion> "else" <cuerpo_funcion> "end"
<identificador> ::= <letra> { <letra> | <numero> }
<numero> ::= { "0" | "1" | ... | "9" }
<cadena> ::= "\"" { <cualquier caracter> } "\""
<booleano> ::= "true" | "false"
<operador> ::= "+" | "-" | "*" | "/" | "=="
...

EBNF:
programa = modulo ;
modulo = "defmodule", identificador, "do", { funcion }, "end" ;
funcion = "def", identificador, "(", { identificador }, ")", "do", cuerpo_funcion, "end" ;
cuerpo_funcion = expresion | condicional ;
expresion = identificador | numero | cadena | booleano | expresion, operador, expresion ;
condicional = "if", expresion, "do", cuerpo_funcion, "else", cuerpo_funcion, "end" ;
identificador = letra, { letra | numero } ;
numero = { "0" | "1" | ... | "9" } ;
cadena = "\"", { cualquier caracter }, "\"" ;
booleano = "true" | "false" ;
operador = "+" | "-" | "*" | "/" | "==" ;
...
